<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>cn.kingweb</groupId>
  <artifactId>creator</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>DongChang-creator</name>
  <description>东昌创客空间租客管理系统-基于JFinal的极速开发框架</description>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
    <jdk.version>1.8</jdk.version>
    <junit.version>4.13.1</junit.version>
    <jfinal.version>4.0</jfinal.version>
    <cos.version>2017.5</cos.version>
    <log4j.version>1.2.17</log4j.version>
    <druid.version>1.1.10</druid.version>
    <fastjson.version>1.2.55</fastjson.version>
    <mysql.version>5.1.46</mysql.version>
    <jsoup.version>1.11.3</jsoup.version>
    <cron4j.version>2.2.5</cron4j.version>
    <jfinalweixin.version>2.3</jfinalweixin.version>
    <ehcache.version>2.6.11</ehcache.version>
    <hutool.version>4.1.17</hutool.version>
    <slf4j.version>1.7.25</slf4j.version>
    <jfinalundertow.version>1.6</jfinalundertow.version>
    <thumbnailator.version>0.4.8</thumbnailator.version>
    <pinyin4j.version>2.5.0</pinyin4j.version>
    <commonslang.version>3.8.1</commonslang.version>
  </properties>

  <!-- 使用阿里 maven 库 -->
  <repositories>
    <repository>
      <id>ali-maven</id>
      <url>http://maven.aliyun.com/nexus/content/groups/public</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>always</updatePolicy>
        <checksumPolicy>fail</checksumPolicy>
      </snapshots>
    </repository>
  </repositories>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.jfinal</groupId>
      <artifactId>cos</artifactId>
      <version>${cos.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jsoup</groupId>
      <artifactId>jsoup</artifactId>
      <version>${jsoup.version}</version>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${commonslang.version}</version>
    </dependency>
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>druid</artifactId>
      <version>${druid.version}</version>
    </dependency>

    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>fastjson</artifactId>
      <version>${fastjson.version}</version>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>${mysql.version}</version>
    </dependency>
    <dependency>
      <groupId>org.clojars.cbilson</groupId>
      <artifactId>pinyin4j</artifactId>
      <version>${pinyin4j.version}</version>
    </dependency>
    <!-- undertow -->
    <dependency>
      <groupId>com.jfinal</groupId>
      <artifactId>jfinal-undertow</artifactId>
      <version>${jfinalundertow.version}</version>
    </dependency>

    <!-- WebSocket 支持 -->
    <!-- <dependency> <groupId>io.undertow</groupId> <artifactId>undertow-websockets-jsr</artifactId>
        <version>2.0.16.Final</version> </dependency> -->

    <!-- 避免控制台输出如下提示信息： SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
        项目中实际上用不到这个 jar 包 注意：eclipse 下可以将 scope 设置为 provided -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-nop</artifactId>
      <version>1.7.25</version>
      <!-- 打包前改成 provided，此处使用 compile 仅为支持 IDEA -->
      <scope>provided</scope>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.apache.poi/poi -->
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi</artifactId>
      <version>3.16</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml -->
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi-ooxml</artifactId>
      <version>3.16</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml-schemas -->
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi-ooxml-schemas</artifactId>
      <version>3.16</version>
    </dependency>



    <!--自选库 -->
    <dependency>
      <groupId>com.jfinal</groupId>
      <artifactId>jfinal-weixin</artifactId>
      <version>${jfinalweixin.version}</version>
    </dependency>
    <dependency>
      <groupId>it.sauronsoftware.cron4j</groupId>
      <artifactId>cron4j</artifactId>
      <version>${cron4j.version}</version>
    </dependency>
    <dependency>
      <groupId>net.sf.ehcache</groupId>
      <artifactId>ehcache-core</artifactId>
      <version>${ehcache.version}</version>
    </dependency>

    <dependency>
      <groupId>cn.hutool</groupId>
      <artifactId>hutool-all</artifactId>
      <version>${hutool.version}</version>
    </dependency>


    <dependency>
      <groupId>com.jfinal</groupId>
      <artifactId>jfinal</artifactId>
      <version>${jfinal.version}</version>
    </dependency>
  </dependencies>


  <build>
    <finalName>jbolt_creator</finalName>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.6.1</version>
        <configuration>
          <source>${jdk.version}</source>
          <target>${jdk.version}</target>
          <encoding>${project.build.sourceEncoding}</encoding>
          <!-- java8 保留参数名编译参数 -->
          <compilerArgument>-parameters</compilerArgument>
          <compilerArguments>
            <verbose />
          </compilerArguments>
        </configuration>
      </plugin>

      <!-- jar 包中的配置文件优先级高于 config 目录下的 "同名文件" 因此，打包时需要排除掉 jar 包中来自 src/main/resources
          目录的 配置文件，否则部署时 config 目录中的同名配置文件不会生效 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.6</version>
        <configuration>
          <excludes>
            <exclude>*.txt</exclude>
            <exclude>*.xml</exclude>
            <exclude>*.properties</exclude>
          </excludes>
        </configuration>
      </plugin>

      <!-- 使用 mvn clean package 打包 更多配置可参考官司方文档：http://maven.apache.org/plugins/maven-assembly-plugin/single-mojo.html -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>

            <configuration>
              <!-- 打包生成的文件名 -->
              <finalName>${project.artifactId}</finalName>
              <!-- jar 等压缩文件在被打包进入 zip、tar.gz 时是否压缩，设置为 false 可加快打包速度 -->
              <recompressZippedFiles>false</recompressZippedFiles>
              <!-- 打包生成的文件是否要追加 release.xml 中定义的 id 值 -->
              <appendAssemblyId>true</appendAssemblyId>
              <!-- 指向打包描述文件 package.xml -->
              <descriptors>
                <descriptor>package.xml</descriptor>
              </descriptors>
              <!-- 打包结果输出的基础目录 -->
              <outputDirectory>${project.build.directory}/</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>
</project>